<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=Edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="keywords" content="" />
    <meta name="description" content="" />
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3"
      crossorigin="anonymous"
    />
    <link rel="stylesheet" href="/css/tab.css" />

    <title>My Account</title>
    <style>
      h1 {
        text-align: center;
        color: antiquewhite;
      }

      h3 {
        text-align: center;
        color: antiquewhite;
      }

      #ABC {
        background-color: #25363f;
        height: 100%;
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
      }

      body {
        background: #25363f;
        margin: 0;
      }
    </style>
  </head>

  <body>
    <section>
      <%- include('./partials/header') %>
      <div class="tab">
        <button class="tablinks " onclick="openCity(event, 'MyAccount')">MyAccount</button>
        <br />
        <button class="tablinks" onclick="openCity(event, 'Payments')">Payments</button>
        <br />
        <button class="tablinks" onclick="openCity(event, 'Support')">Support</button>
      </div>
      <div id="MyAccount" class="tabcontent ">
        <h1>My Account</h1>
        <% if(isLoggedIn){ %>
        <h1>
          JWT : <% var count; %> <% for (count = 0; count < 12; count++) { %> <%= userToken[count]
          %> <% } %> ...
        </h1>
        <h1>User : <%= userFromReq %></h1>
        <h1>Change Password</h1>

        <h1 style="color: red">
          <button id="shwTok" type="button" class="btn btn-danger">SHOW TOKEN</button>
          <br />
          <br />
          <button id="updtok" type="button" class="btn btn-danger">CHANGE TOKEN</button>
        </h1>

        <% } else{ %>
        <h1>not logged in</h1>
        <% } %>
      </div>

      <div id="Payments" class="tabcontent">
        <h3>Payments</h3>
      </div>

      <div id="Support" class="tabcontent">
        <h3>Support</h3>
      </div>
    </section>
    <script
      src="https://code.jquery.com/jquery-3.3.1.slim.min.js"
      integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo"
      crossorigin="anonymous"
    ></script>
    <script
      src="https://cdn.jsdelivr.net/npm/popper.js@1.14.7/dist/umd/popper.min.js"
      integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1"
      crossorigin="anonymous"
    ></script>
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.min.js"
      integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM"
      crossorigin="anonymous"
    ></script>

    <script>
      tabcontent = document.getElementsByClassName("tabcontent");
      for (i = 1; i < tabcontent.length; i++) {
        tabcontent[i].style.display = "none";
      }

      function openCity(evt, cityName) {
        // Declare all variables
        var i, tabcontent, tablinks;

        // Get all elements with class="tabcontent" and hide them
        tabcontent = document.getElementsByClassName("tabcontent");
        for (i = 0; i < tabcontent.length; i++) {
          tabcontent[i].style.display = "none";
        }

        // Get all elements with class="tablinks" and remove the class "active"
        tablinks = document.getElementsByClassName("tablinks");
        for (i = 0; i < tablinks.length; i++) {
          tablinks[i].className = tablinks[i].className.replace(" active", "");
        }

        // Show the current tab, and add an "active" class to the button that opened the tab
        document.getElementById(cityName).style.display = "block";
        evt.currentTarget.className += " active";
      }

      const getUserToken = async () => {
        let thisUser = "<%= userFromReq %>";
        console.log(" user (getUserToken) : " + thisUser);
        const res = await fetch("/api/auth/getUserToken", {
          method: "PUT",
          body: JSON.stringify({ user: thisUser }),
          headers: { "Content-Type": "application/json" },
        });

        const status = await res.status;
        const data = await res.json();

        console.log("this is the status : " + status);
        console.log("Here is data : " + JSON.stringify(data));

        return data["userToken"];
      };

      const updateUserToken = async () => {
        let newToken = generateToken();

        let thisUser = "<%= userFromReq %>";
        console.log("new token : " + newToken + " user (myacc) : " + thisUser);
        const res = await fetch("/api/auth/getUserSelf", {
          method: "PUT",
          body: JSON.stringify({ token: newToken, user: thisUser }),
          headers: { "Content-Type": "application/json" },
        });

        const status = await res.status;
        const data = await res.json();

        console.log("this is the status : " + status);
        console.log("Here is datas : " + JSON.stringify(data));
        console.log("New Token : " + data["user"]["apiToken"]);

        return data["user"]["apiToken"];
      };

      function lgcns() {
        console.log("logout");
      }

      function visitMyAccount() {
        console.log("token");
        window.location = "http://localhost:5000/home";
      }

      const updbutton = document.getElementById("updtok");

      updbutton.addEventListener("click", () =>
        updateUserToken().then((data) => {
          console.log("this is the data : " + data);
          document.getElementById("updtok").outerHTML = data;
        })
      );

      const shwbutton = document.getElementById("shwTok");

      shwbutton.addEventListener("click", () =>
        getUserToken().then((data) => {
          console.log("this is the data : " + data);
          document.getElementById("shwTok").outerHTML = data;
        })
      );

      function generateToken() {
        console.log("token");
        let chars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
        let token = "";
        for (let i = 0; i < 40; i++) {
          token += chars[Math.floor(Math.random() * chars.length)];
        }
        console.log(token);
        return token;
      }
    </script>
  </body>
</html>
